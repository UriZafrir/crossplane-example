apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: exampleuis.example.datalayer.io
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: example.datalayer.io/v1alpha1
    kind: ExampleUI
  resources:

    # Network
    ############################

    - base:
        apiVersion: compute.gcp.crossplane.io/v1beta1
        kind: Network
        spec:
          forProvider:
            autoCreateSubnetworks: false
            routingConfig:
              routingMode: REGIONAL

    # GKECluster
    ############################

    - base:
        apiVersion: container.gcp.crossplane.io/v1beta1
        kind: GKECluster
        spec:
          forProvider:
            addonsConfig:
              kubernetesDashboard:
                disabled: true
              networkPolicyConfig:
                disabled: false
            databaseEncryption:
              state: DECRYPTED
            defaultMaxPodsConstraint:
              maxPodsPerNode: 110
            description: Host Cluster instance of basic tier
            ipAllocationPolicy:
              createSubnetwork: true
              useIpAliases: true
            networkPolicy:
              enabled: true
            legacyAbac:
              enabled: false
            podSecurityPolicyConfig:
              enabled: false
            verticalPodAutoscaling:
              enabled: true
            masterAuth:
              username: admin
            loggingService: logging.googleapis.com/kubernetes
            monitoringService: monitoring.googleapis.com/kubernetes
            networkSelector:
              matchControllerRef: true
            location: us-central1
            locations:
              - us-central1-a
              - us-central1-f
          writeConnectionSecretToRef:
            namespace: crossplane-system
      patches:
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.annotations[crossplane.io/external-name]"
          transforms:
            - type: string
              string:
                fmt: "crossplane-examples-%s"
        - fromFieldPath: "metadata.labels"
          toFieldPath: "metadata.labels"
        - fromFieldPath: "metadata.annotations[crossplane.io/external-name]"
          toFieldPath: "metadata.annotations[crossplane.io/external-name]"
        - fromFieldPath: "metadata.uid"
          toFieldPath: "spec.writeConnectionSecretToRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-exampleui-gkecluster"
        - fromFieldPath: "spec.clusterVersion"
          toFieldPath: "spec.forProvider.initialClusterVersion"
      connectionDetails:
        - fromConnectionSecretKey: kubeconfig

    # NodePool
    ############################

    - base:
        apiVersion: container.gcp.crossplane.io/v1alpha1
        kind: NodePool
        spec:
          forProvider:
            initialNodeCount: 2
            locations:
              - us-central1-a
              - us-central1-f
            autoscaling:
              enabled: true
              minNodeCount: 1
              maxNodeCount: 10
            config:
              diskSizeGb: 100
              diskType: pd-standard
              imageType: COS
              machineType: n1-standard-4
              metadata:
                disable-legacy-endpoints: "true"
              oauthScopes:
                - https://www.googleapis.com/auth/devstorage.read_only
                - https://www.googleapis.com/auth/logging.write
                - https://www.googleapis.com/auth/monitoring
                - https://www.googleapis.com/auth/servicecontrol
                - https://www.googleapis.com/auth/service.management.readonly
                - https://www.googleapis.com/auth/trace.append
                - https://www.googleapis.com/auth/cloud-platform
              preemptible: false
              serviceAccount: default
              shieldedInstanceConfig:
                enableIntegrityMonitoring: true
                enableSecureBoot: true
            clusterSelector:
              matchControllerRef: true
            management:
              autoRepair: true
              autoUpgrade: true
            maxPodsConstraint:
              maxPodsPerNode: 110
      patches:
        - fromFieldPath: "spec.clusterVersion"
          toFieldPath: "spec.forProvider.version"

    # CloudSQLInstance
    ############################

    - base:
        apiVersion: database.gcp.crossplane.io/v1beta1
        kind: CloudSQLInstance
        spec:
          forProvider:
            databaseVersion: POSTGRES_9_6
            region: us-central1
            settings:
              tier: db-custom-1-3840
              dataDiskType: PD_SSD
              ipConfiguration:
                ipv4Enabled: true
                authorizedNetworks:
                  - value: "0.0.0.0/0"
          writeConnectionSecretToRef:
            namespace: crossplane-system
      patches:
        - fromFieldPath: "metadata.uid"
          toFieldPath: "spec.writeConnectionSecretToRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-exampleui-postgresql"
        - fromFieldPath: "spec.parameters.storageGB"
          toFieldPath: "spec.forProvider.settings.dataDiskSizeGb"

    # SQL Provider Config
    ############################

    - base:
        apiVersion: postgresql.sql.crossplane.io/v1alpha1
        kind: ProviderConfig
        spec:
          credentials:
            source: PostgreSQLConnectionSecret
            connectionSecretRef:
              name: 
              namespace: crossplane-system
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
        - fromFieldPath: metadata.uid
          toFieldPath: spec.credentials.connectionSecretRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-exampleui-postgresql"

    # SQL Database, Role and Grant
    ###############################

    - base:
        apiVersion: postgresql.sql.crossplane.io/v1alpha1
        kind: Database
        metadata:
          annotations:
            crossplane.io/external-name: crossplane_examples
        spec:
          forProvider: {}
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
    - base:
        apiVersion: postgresql.sql.crossplane.io/v1alpha1
        kind: Role
        metadata:
          annotations:
            crossplane.io/external-name: crossplane-examples-role
        spec:
          forProvider:
            privileges:
              createDb: true
              login: true
          writeConnectionSecretToRef:
            namespace: crossplane-system
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: metadata.uid
          toFieldPath: spec.writeConnectionSecretToRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-role-exampleui-postgresql"
    - base:
        apiVersion: postgresql.sql.crossplane.io/v1alpha1
        kind: Grant
        metadata:
          name: exampleui-grant-role-on-database
        spec:
          forProvider:
            privileges:
              - CREATE
            withOption: GRANT
            roleRef:
              name: 
            databaseRef:
              name: 
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.roleRef.name
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.databaseRef.name

    # Helm Provider Config
    ############################

    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: ProviderConfig
        spec:
          credentials:
            source: Secret
            secretRef:
              namespace: crossplane-system
              key: kubeconfig
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
        # This ProviderConfig uses the above GKECluster's connection secret as
        # its credentials secret.
        - fromFieldPath: metadata.uid
          toFieldPath: spec.credentials.secretRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-exampleui-gkecluster"
      readinessChecks:
        - type: None

    # Helm Release
    ############################

    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations: 
            crossplane.io/external-name: crossplane-examples
        spec:
          forProvider:
            chart:
              name: crossplane-examples
              repository: https://helm.datalayer.io/examples
              version: 0.0.1
            namespace: crossplane-examples
            values:
              image: datalayer/crossplane-examples:0.0.1
              imagePullPolicy: Always
              startDatabase: "false"
              secret:
                create: true
                name: db-conn-secret
            set: 
              - name: env.secret.endpoint
                valueFrom:
                  secretKeyRef:
                    name: 
                    namespace: crossplane-system
                    key: endpoint
              - name: env.secret.username
                value: crossplane-examples-role
              - name: env.secret.password
                valueFrom:
                  secretKeyRef:
                    name: 
                    namespace: crossplane-system
                    key: password
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: metadata.uid
          toFieldPath: spec.forProvider.set[0].valueFrom.secretKeyRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-role-exampleui-postgresql"
        - fromFieldPath: metadata.uid
          toFieldPath: spec.forProvider.set[2].valueFrom.secretKeyRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-role-exampleui-postgresql"
